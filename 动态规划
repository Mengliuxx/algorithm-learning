1、简介：
    动态规划用于解决一大类算法问题：一个阶段的最优解可以由之前某个（或某些）阶段的最优解得到。
    核心思想：归纳法  dp[n] = f(dp[n-i], dp[n-j],...)

2、解题步骤
    1. 确定需要保存在dp表中的状态（关键！）：例如数组，包括一维，二维，甚至三维。
    2. 确定当前状态和之前状态之间的递推关系（状态转移方程）： 例如整理f(n)和f(n-1)的关系
    3. 填充dp表
        a. 自顶向下：使用递归，大问题分解为小问题，dp表充当备忘录
        b. 自底向上：使用迭代，小问题合并为大问题，按依赖顺序进行填充
    4. 从dp表中读取最终状态，即结果。

3、动态规划类题目特征
    a. 能基于子问题最优解得到原问题最优解（最优子结构）
        反例：无法规划分子问题，或子问题和原问题在最优化过程中会互相制约
    b. 后续决策不受历史决策影响 （无后效性）
        反例：状态转移方程不仅依赖之前的状态，还依赖到达此状态的步骤。